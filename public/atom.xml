<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan Office Client Support Blog</title>
  
  <subtitle>日本マイクロソフト Office Client サポート チームのブログです</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://officesupportjp.github.io/blog/"/>
  <updated>2021-03-19T02:24:30.022Z</updated>
  <id>https://officesupportjp.github.io/blog/</id>
  
  <author>
    <name>Office Support Japan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Excel に入力した記号のフォントが Cambria Math に変更される事象について</title>
    <link href="https://officesupportjp.github.io/blog/Excel%20%E3%81%AB%E5%85%A5%E5%8A%9B%E3%81%97%E3%81%9F%E8%A8%98%E5%8F%B7%E3%81%AE%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%8C%20Cambria%20Math%20%E3%81%AB%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%82%8B%E4%BA%8B%E8%B1%A1%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/"/>
    <id>https://officesupportjp.github.io/blog/Excel%20%E3%81%AB%E5%85%A5%E5%8A%9B%E3%81%97%E3%81%9F%E8%A8%98%E5%8F%B7%E3%81%AE%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%8C%20Cambria%20Math%20%E3%81%AB%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%82%8B%E4%BA%8B%E8%B1%A1%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</id>
    <published>2021-03-03T15:00:00.000Z</published>
    <updated>2021-03-19T02:24:30.022Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Office サポート チームの永田です。</p><p>Excelで、「≧」「⇒」といった一部の記号のフォントが、予期せず Cambria Math に変更される事象が発生することがあります。 情報に更新があり次第、このブログ記事は更新される予定です。</p><p><strong>事象</strong></p><p>Excelで、「≧」「⇒」といった一部の記号のフォントが、予期せず Cambria Math に変更される</p><p><strong>再現手順</strong></p><ol><li>Excel を起動する</li><li>新規ブックを追加する</li><li>セル A1 を選択し、ホーム - フォント 欄より、フォントを Arial に設定する</li><li>セル A1 をダブルクリックして編集モードにする</li><li>日本語入力 ON にして、「だいなり」と入力し、≧ 記号を入力して決定する</li></ol><p><u>結果</u></p><p>フォントが Cambria Math に変更される。また、それに伴って行の高さが予期せず大きくなる。</p><p><strong>再現条件</strong></p><p>以下の場合には再現しません</p><ul><li>[ファイル] - [オプション] - [言語] - [Office の編集言語と構成機能] より、英語 (米国) が &lt;優先&gt; となっている場合には発生しない。日本語が &lt;優先&gt; の場合に発生する。</li><li>上記の手順 4. を飛ばして、編集モードまたは入力モードにしない状態で「≧」記号だけを入力した場合、発生しない。</li><li>上記の手順 3. の手順で、セルのフォントを MS Pゴシック などに設定した場合、発生しない。</li></ul><p>以下の場合、事象が発生します</p><ul><li>既に「≧」記号が入力され、期待通りに表示されているセルについて、セルのフォントを Arial に変更後、セルをダブルクリックすると、記号のフォントが Cambria Math に変更される。</li><li>セルのフォントが Arial の状態で、[挿入] - [記号と特殊記号] - [記号と特殊記号] を開き、[フォント(F): MS Pゴシック]、[種類(U): 数学記号] をそれぞれ選択し、一覧から記号を挿入すると、挿入直後はフォントが変化しない。ただし、このセルをダブルクリックすると、記号のフォントが Cambria Math に変更される。</li></ul><p><strong>影響範囲</strong></p><p>Microsoft 365 Apps 内の Excel、および、ボリュームライセンス版の Excel 2019 で発生します。Microsoft 365 Apps の場合、現時点で最新のバージョン 2102 (13801.20274) でも発生します。</p><p>Excel 2013 や、ボリュームライセンス版の Excel 2016、パッケージ版の Excel 2016 では発生しません。</p><p><strong>対応状況</strong></p><p>マイクロソフトでは現時点でこの問題を調査中です。</p><p><strong>回避策</strong></p><p>現段階での回避策としては、誠に恐れ入りますが、以下の方法を検討ください。</p><ul><li>すでに Cambria Math に変換されたセルは、セルを選択して「MS ゴシック」など日本語フォントに設定する</li><li>これから「≧」記号を入力するセルは、予め「MS ゴシック」など日本語フォントに設定しておく</li><li>「≧」記号の両辺の数字を英数字フォント (Arial など) に変更したい場合には、予めセル全体を「MS ゴシック」など日本語フォントに設定した後、セルをダブルクリックして編集モードにし、「≧」記号以外の箇所 (例: 記号の両辺の数字など) を選択して、フォントを Arial などに変更する。</li><li>[ファイル] - [オプション] - [言語] - [Office の編集言語と構成機能] より、優先する言語を、英語に変更する。</li></ul><p>今回の投稿は以上です。</p><p><strong>本情報の内容 (添付文書、リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Office サポート チームの永田です。&lt;/p&gt;
&lt;p&gt;Excelで、「≧」「⇒」といった一部の記号のフォントが、予期せず Cambria Math に変更される事象が発生することがあります。 情報に更新があり次第、このブログ記事は更新される予定です。&lt;/p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>クリップボード アクセスの競合による Office でのコピー-貼り付け失敗</title>
    <link href="https://officesupportjp.github.io/blog/%E3%82%AF%E3%83%AA%E3%83%83%E3%83%97%E3%83%9C%E3%83%BC%E3%83%89%20%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%AE%E7%AB%B6%E5%90%88%E3%81%AB%E3%82%88%E3%82%8B%20Office%20%E3%81%A7%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC-%E8%B2%BC%E3%82%8A%E4%BB%98%E3%81%91%E5%A4%B1%E6%95%97/"/>
    <id>https://officesupportjp.github.io/blog/%E3%82%AF%E3%83%AA%E3%83%83%E3%83%97%E3%83%9C%E3%83%BC%E3%83%89%20%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%AE%E7%AB%B6%E5%90%88%E3%81%AB%E3%82%88%E3%82%8B%20Office%20%E3%81%A7%E3%81%AE%E3%82%B3%E3%83%94%E3%83%BC-%E8%B2%BC%E3%82%8A%E4%BB%98%E3%81%91%E5%A4%B1%E6%95%97/</id>
    <published>2021-01-18T15:00:00.000Z</published>
    <updated>2021-03-19T02:24:30.025Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Office サポート チームの中村です。</p><p>Office アプリケーション上でコピーや貼り付け操作を行ったときに、コピーしたはずのデータが貼り付けられなかったり、エラーが発生することがあります。これは、他のアプリケーションとのクリップボードへのアクセスが競合したことが原因である場合が非常に多いものとなります。このような原因でコピー・貼り付けに失敗する場合、基本的には再度コピーや貼り付けを行うしかありません。</p><p>弊社サポートへのお問い合わせの中で、このような状況が避けられないことに疑問を持つ声を時折頂いていますので、今回の記事では、この仕組みを解説します。</p><h4 id="1-Windows-のコピー・貼り付けの仕組み"><a href="#1-Windows-のコピー・貼り付けの仕組み" class="headerlink" title="1. Windows のコピー・貼り付けの仕組み"></a><strong>1. Windows のコピー・貼り付けの仕組み</strong></h4><p>Windows 上では、例えば Office / インターネット ブラウザ / メモ帳など、異なるアプリケーション間でデータをコピーして貼り付けることができます。このような操作が実現できるのは、OS の「クリップボード」がコピーデータを仲介しているためです。アプリケーション上でデータをコピーすると、クリップボードにコピーしたデータを格納します。また、別のアプリケーションで貼り付けを行うときには、クリップボードからコピーしたデータを取り出します。</p><p>このクリップボードを介したコピー・貼り付けの仕組みにおいては、データの整合性を担保することが重要です。例えば、コピーしたデータをクリップボードに格納している途中で他のアプリケーションがこのデータを読み取ると、中途半端な状態のコピーデータが読み取られる危険があります。また、同時に複数のプロセスが異なるコピーデータをクリップボードに書きこむと、データが破損する懸念があります。このような問題を避けるため、クリップボードに複数のアプリケーションから同時にアクセスができないよう、あるアプリケーションからクリップボードにアクセスしている最中は、クリップボードをロックする仕組みとなっています。</p><p><img src="image1.png" alt=""></p><p>このようにクリップボードがロックされている間に他のプロセスがクリップボードをオープンすると、そのアクセスは失敗します。つまり、コピーしたデータが格納できなかったり、貼り付けたいデータが取得できず何も貼り付けられなかったり、といった状況となります。アプリケーションによっては、クリップボードのオープン失敗を検知してエラーメッセージを表示することもあります。このような状況を、「クリップボード アクセスの競合」と呼んでいます。</p><p><img src="image2.png" alt=""></p><p>上記の図におけるプロセス B からは、自身がコピーなどのためにクリップボードにアクセスするとき、クリップボードがロックされているか、通常確認を行うことはありませんし、仮に確認しても強制的にロックを解除することはできません。このため、上図のようにタイミングによってはクリップボードにアクセスできない場合があることは Windows のクリップボードを介したコピー・貼り付けの仕組み上、避けることはできません。Office がプロセス B の立場になった場合も同様ですので、Office 上でのコピー・貼り付けにおいてもこの仕組みの制約を受けることになります。  </p><h4 id="2-問題に直面するシナリオ"><a href="#2-問題に直面するシナリオ" class="headerlink" title="2. 問題に直面するシナリオ"></a><strong>2. 問題に直面するシナリオ</strong></h4><p>ユーザー操作によるコピーと貼り付けでのみクリップボードが使われる場合、この流れはシリアルに行われますので、競合が発生することはありません。しかし、実際の Windows 上では、様々な目的でユーザーが意識していないタイミングでクリップボードへのアクセスが行われることがあります。以下に、その例を記載します。  </p><p><strong>・Windows 10 のクリップボード履歴機能</strong></p><p>Windows 10 バージョン 1807 から追加された新機能で、コピーしたデータの過去複数件の履歴を保持して貼り付けられるようになりました。この機能の実現のため、クリップボードにデータが格納されると、クリップボード履歴機能のプロセスからクリップボードにアクセスが発生します。</p><p>参考)クリップボードの概要<br><a href="https://support.microsoft.com/ja-jp/windows/30375039-ce71-9fe4-5b30-21b7aab6b13f" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/windows/30375039-ce71-9fe4-5b30-21b7aab6b13f</a></p><p><strong>・エクスプローラの [貼り付け] ボタン</strong></p><p>エクスプローラのリボンに [貼り付け] ボタンがあります。コピーデータがファイルなどのエクスプローラ上で貼り付けられるデータの場合に、このリボンのボタンを活性化するため、リボンが展開表示されている場合は、コピー時にエクスプローラからもアクセスが発生します。(リボンを閉じた状態で OS を再起動してそのままリボンを開かなければ、このアクセスは発生しません。)  </p><p><strong>・リモート デスクトップのクリップボード共有</strong></p><p>リモート デスクトップ時に、[ローカル リソース] タブで [クリップボード] のチェックを有効にすると、ローカルとリモートのマシン間でデータをコピーすることができます。この機能が有効な状態でリモート接続している場合、これを管理するプロセス (rdpclip.exe) からクリップボードにアクセスが発生します。  </p><p><strong>・他の Office アプリケーション</strong></p><p>Office アプリケーション間では、Word と Excel など、別の Office アプリケーション同士でコピー・貼り付けを行う独自の仕組み (Office クリップボード) があります。この機能は、OS にクリップボード履歴機能が搭載される以前から、コピーデータの履歴を利用できる機能を提供していました。この機能実現のため、いずれかの Office アプリケーションでコピーが行われると、起動している他の Office アプリケーションからクリップボードにアクセスが発生します。</p><p>なお、この機能については以下のレジストリを設定することで無効化できます。Office クリップボードを無効化しても、通常の OS としてのコピー・貼り付け機能の範囲でコピー操作を利用できます。</p><p>&lt;Office クリップボードの無効化&gt;<br>キー : HKEY_CURRENT_USER\Software\Microsoft\Office\16.0\Common\General名前: AcbControl<br>種類: REG_DWORD<br>値 : 2147483648 (10 進)<br>※ Microsoft 365 / Office 2019 / Office 2016 向けのレジストリ キーです。<br>※ すべての Office アプリケーションを終了した状態で設定してください。  </p><p><strong>・サードパーティ製品 (主にクリップボード監視機能、セキュア接続機能などを提供する製品)</strong></p><p>サードパーティ ソフトでも、クリップボードへのアクセスが行われることがあります。</p><p>例えばセキュリティ ソフトなどには、ユーザーによるデータの持ち出しを監視するため、クリップボード監視機能がついているものがあります。このような製品の多くでは、クリップボード監視機能によって、データのコピー・貼り付けなどに連動してクリップボードにアクセスが発生します。</p><p>また、Windows のリモート デスクトップに似た、独自のセキュア接続としてリモート マシンに接続するソフトでも、クリップボード共有のためアクセスが発生することがあります。  </p><p>このように、様々なプロセスからクリップボードへのアクセスは発生しますが、ほとんどの場合、実際にはクリップボードがロックされるのは非常に短い時間であるため、実際に競合が生じることは一般的な環境やユーザー操作シナリオではそれほど多くはありません。</p><p>ただ、クリップボード アクセスの競合は、クリップボードがロックされている時間が長いほど発生しやすくなります。ロック時間の長さは、コピーデータのサイズやアプリケーションの処理の流れによって異なります。また当然、クリップボード アクセスを行うプロセスが多いほど競合の可能性は高くなるため、様々な製品を導入された環境や、多数のアプリケーションを起動していると比較的発生しやすくなります。そして、プログラムからループ処理で短い時間で繰り返しコピーや貼り付けを行うときは競合の可能性が高くなります。</p><p>これらの要素に該当する環境や利用状況では、実際にある程度高い頻度で競合が発生することがある、という報告は弊社サポートにも寄せられています。  </p><h4 id="3-対応方法"><a href="#3-対応方法" class="headerlink" title="3. 対応方法"></a><strong>3. 対応方法</strong></h4><p>1. でご説明した通り、仕組み上、クリップボードへのアクセス競合を完全に防ぐことはできません。このため、Office アプリケーションで競合によるコピー・貼り付けの失敗が生じる状況では、競合相手のプロセスを停止 (クリップボードにアクセスする機能を無効化) して解消するか、ユーザーが再度コピーや貼り付けを行う運用対処しかありません。</p><p>クリップボードへのアクセスが失敗した場合の Office の動作は、アプリケーションによって異なります。</p><p><strong>Excel</strong></p><p>コピー時にクリップボードへのアクセスに失敗すると以下のようなメッセージが表示され、このときにも、その Excel プロセス内ではデータの貼り付けが可能です。(他のアプリケーションには貼り付けられません。)</p><p><img src="image3.png" alt=""></p><p>貼り付け時のクリップボード アクセス失敗の場合は、クリップボードからデータを取得できないため貼り付けられません。この時は、特にエラーメッセージは表示されません。  </p><p><strong>Word / PowerPoint</strong></p><p>コピー、貼り付け共に特にエラーメッセージは表示されず、自アプリケーション内でも貼り付けはできません。  </p><p><strong>マクロ等からのコピー処理で発生する場合の対処</strong></p><p>VBA マクロやその他言語で Office をオートメーションしていて、その処理の中でコピー・貼り付けを行うときに現象が発生する場合は、コピー・貼り付けではなく、別の方法でデータの転記を行うよう変更して回避することをお勧めします。</p><p>例えば、Excel でセルをコピーして別のシートに貼り付けるような場合は、コピー元のセル オブジェクトの Valueなどを貼り付け先のセルに設定するよう変更し、Copy や Paste といったメソッドは使用しないことが検討できます。</p><p>例: B1 セルの内容を A1 セルへクリップボードを経由して貼り付けるコードの変更イメージ</p><p>変更前:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ActiveSheet.Range(&quot;B1&quot;).Copy</span><br><span class="line">ActiveSheet.Range(&quot;A1&quot;).Select</span><br><span class="line">ActiveSheet.Paste</span><br></pre></td></tr></table></figure><p>変更後:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ActiveSheet.Range(&quot;A1&quot;).Value &#x3D; ActiveSheet.Range(&quot;B1&quot;).Value</span><br></pre></td></tr></table></figure><p>今回の投稿は以上です。  </p><p><strong>本情報の内容 (添付文書、リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Office サポート チームの中村です。&lt;/p&gt;
&lt;p&gt;Office アプリケーション上でコピーや貼り付け操作を行ったときに、コピーしたはずのデータが貼り付けられなかったり、エラーが発生することがあります。これは、他のアプリケーションとのクリップボードへのアク
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Excel で ScrollArea プロパティを設定すると、キーボード操作でシートがスクロールしない</title>
    <link href="https://officesupportjp.github.io/blog/Excel%20%E3%81%A7%20ScrollArea%20%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B%E3%81%A8%E3%80%81%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E6%93%8D%E4%BD%9C%E3%81%A7%E3%82%B7%E3%83%BC%E3%83%88%E3%81%8C%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%97%E3%81%AA%E3%81%84/"/>
    <id>https://officesupportjp.github.io/blog/Excel%20%E3%81%A7%20ScrollArea%20%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B%E3%81%A8%E3%80%81%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E6%93%8D%E4%BD%9C%E3%81%A7%E3%82%B7%E3%83%BC%E3%83%88%E3%81%8C%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%97%E3%81%AA%E3%81%84/</id>
    <published>2021-01-11T15:00:00.000Z</published>
    <updated>2021-03-19T02:24:30.015Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Office サポート チームの中村です。</p><p>Excel には、ワークシートのスクロール可能な範囲を設定する ScrollArea というシート プロパティが用意されています。本記事では、このScrollArea プロパティを設定したとき、キーボードの矢印キーや Tab キーなどで選択セルを移動したとき、ウィンドウに表示されていないセルに移動しても、そのセルが画面に表示されるようシートがスクロールしない動作について記載します。  </p><h4 id="1-現象"><a href="#1-現象" class="headerlink" title="1. 現象"></a><strong>1. 現象</strong></h4><p>以下の画面キャプチャをご覧ください。この画面では、O2 セルが現在選択されていますが、画面右端に見切れて表示された状態になっています。(赤枠部分)</p><p>通常、例えば A2 セルから右矢印キーや、Tab キーで B2、C2・・・と順に列を移動すると、選択状態のセル全体がウィンドウ内に見える位置に自動的にスクロールされます。しかしながら、後述の状況においては、この画面キャプチャのように十分にスクロールされない場合があります。またこのあと、O 列以降のセルに移動してもこの位置のままスクロールしません。</p><p><img src="image1.png" alt="">  </p><h4 id="2-現象が発生する状況"><a href="#2-現象が発生する状況" class="headerlink" title="2. 現象が発生する状況"></a><strong>2. 現象が発生する状況</strong></h4><p>この動作に直面する主な状況は、ワークシートの ScrollArea プロパティが設定された状態で、かつセルの幅や高さが広げられているときに、スクロール可能範囲の終端に近いセルに移動する場合です。</p><p>Excel が画面外の領域にスクロールするときに、スクロール後のウィンドウ内に表示するシート範囲などを、セルの幅や高さ / ウィンドウのサイズ / 残りのスクロール可能範囲などの要素を基に算出します。これらの要素の組み合わせ次第で、スクロール後の表示位置を期待通りに算出できない場合があり、この現象が発生します。</p><p>また、Excel バージョンによっても細かな動作は異なるため、例えば同じファイルを同じウィンドウ サイズで開いても、スクロールしなくなる動作が生じる列や行はバージョンによって異なる場合があります。</p><p>発生に関わる条件をまとめると以下の通りです。</p><p><strong>条件 1:</strong><br>ワークシートの ScrollArea プロパティが設定されていること</p><p>※ プログラムからは Worksheet オブジェクトのプロパティや、Visual Basic Editor でプロパティ ウィンドウからも設定・確認できます。<br>ScrollArea プロパティ (Excel)<br><a href="https://docs.microsoft.com/ja-jp/office/vba/api/excel.worksheet.scrollarea" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/office/vba/api/excel.worksheet.scrollarea</a></p><p><img src="image2.png" alt=""></p><p><strong>条件 2:</strong><br>以下の要素等の組み合わせによって発生</p><ul><li>選択セルから ScrollArea プロパティの終端までの残りの幅・高さ</li><li>Excel ブック画面のウィンドウ サイズ</li><li>各セルの幅や高さ</li><li>シートの倍率</li><li>ウィンドウ サイズなどの算出に関わるディスプレイの拡大縮小、スケール設定</li></ul><p>この動作は、ユーザーの利用上、不便な場合がある動作であることは認識しておりますが、現状のスクロール動作の内部処理上の制約として、現時点でサポートされる全てのバージョンの Excel で発生しうる制限動作となっています。(2021/1/12 現在、サポート対象の Excel は Excel 2013 / 2016 / 2019 / Office 365 の Excel です。)  </p><h4 id="3-回避策"><a href="#3-回避策" class="headerlink" title="3. 回避策"></a><strong>3. 回避策</strong></h4><p>この動作が生じるファイルやウィンドウ サイズなどの構成でも、以下のいずれかの方法でスクロールできます。  </p><h5 id="3-1-スクロールバーでスクロールする"><a href="#3-1-スクロールバーでスクロールする" class="headerlink" title="3-1. スクロールバーでスクロールする"></a><strong>3-1. スクロールバーでスクロールする</strong></h5><p>マウス操作でスクロール バーによってスクロールすると、画面をスクロールできます。<br>以下は、先述のファイルでスクロール バーの右矢印 (赤枠部分) をマウスで操作してスクロールした例です。</p><p><img src="image3.png" alt="">  </p><h5 id="3-2-ScrollArea-を広げる、または解除する"><a href="#3-2-ScrollArea-を広げる、または解除する" class="headerlink" title="3-2. ScrollArea を広げる、または解除する"></a><strong>3-2. ScrollArea を広げる、または解除する</strong></h5><p>移動先のセルから、ScrollArea の終端までの幅や高さが十分に広い場合には、正常にスクロールできます。</p><p>例えば A～Q 列にあるテーブルの範囲だけスクロールするさせるため、ScrollArea プロパティに A ～ Q 列を設定しているとします。これを、例えば Z 列など、ある程度余裕を持った範囲をスクロールできるよう設定すると、実際にスクロールしたい範囲では期待通りスクロールできます。(どの列までを ScrollArea に設定すれば問題ないかは、条件 2 の各要素に依存します。具体的な値は定められませんが、実際の環境・ファイルで動作を確認しながら、余裕を持った範囲を設定してください。)</p><p>ScrollArea を広げるにあたって、例えば上記の例であれば、テーブル外の R ～ Z 列のセルを選択させたくない場合は、シート保護の設定で [ロックされたセル範囲の選択] を無効にすることでセル選択を禁止できます。  </p><p><strong>設定手順:</strong><br>1. 選択させたくないセル (上記の例では R ～ Z 列) のセルを右クリックし、[セルの書式設定] – [保護] で [ロック] を有効にします。(既定では有効です。)</p><p>2. 反対に、選択を可能とするセル (上記の例では A ~ Q 列) は同様のメニューで、[ロック] を無効にします。</p><p>3. [校閲] タブ – [シートの保護] – “このシートのすべてのユーザーに許可する操作” の一覧で [ロックされたセル範囲の選択] のチェックを外します。</p><p><img src="image4.png" alt=""><br><img src="image5.png" alt=""></p><p>VBA などのプログラムからは、以下で設定できます。</p><p>Worksheet. EnableSelection プロパティ (Excel)<br><a href="https://docs.microsoft.com/ja-jp/office/vba/api/excel.worksheet.enableselection" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/office/vba/api/excel.worksheet.enableselection</a></p><p>このプロパティで xlUnlockedCells を設定します。このプロパティは、ワークシートを保護した状態でのみ有効ですので、さらに以下の Protect メソッドでワークシートを保護します。</p><p>Protect メソッド (Excel)<br><a href="https://docs.microsoft.com/ja-jp/office/vba/api/excel.worksheet.protect" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/office/vba/api/excel.worksheet.protect</a></p><p>また、選択セルの移動を制限することが ScrollArea プロパティを設定している目的である場合は、上記の設定を代わりに行うことで、ScrollArea プロパティの設定自体を削除することも検討できます。(ただし、スクロール バーの操作ではスクロールできます。)</p><p>ScrollArea 設定を削除する場合は、プログラムからは ScrollArea プロパティに空の値 (“”) を設定してください。プロパティ ウィンドウの場合は、ScrollArea プロパティの値を削除してください。  </p><p>今回の投稿は以上です。  </p><p><strong>本情報の内容 (添付文書、リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Office サポート チームの中村です。&lt;/p&gt;
&lt;p&gt;Excel には、ワークシートのスクロール可能な範囲を設定する ScrollArea というシート プロパティが用意されています。本記事では、このScrollArea プロパティを設定したとき、キーボード
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PowerPoint Online で日本語フォントが変更される</title>
    <link href="https://officesupportjp.github.io/blog/PowerPoint%20Online%20%E3%81%A7%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%8C%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%82%8B/"/>
    <id>https://officesupportjp.github.io/blog/PowerPoint%20Online%20%E3%81%A7%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%8C%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%82%8B/</id>
    <published>2020-12-03T15:00:00.000Z</published>
    <updated>2021-03-19T02:24:30.023Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Office サポート チームです。</p><p>本記事では、PowerPoint Online で日本語フォントが異なるフォントで表示される問題について説明します。</p><p><strong>現象</strong></p><p>PowerPoint の表内の日本語フォントが、PowerPoint Online で表示すると異なるフォントで表示されます。</p><p>例えば、スライド マスターでテーマ フォントを Meiryo UI に設定しているプレゼンテーションで、PowerPoint Online 上では英数字用のフォント (例では Arial) で表示されます。</p><p><img src="image1.png" alt="">  </p><p><strong>原因</strong></p><p>この現象は問題としてフィードバックを行いました。</p><p><strong>回避策</strong></p><p>以下のいずれかの回避策で現象を回避できます。</p><p>1. 表のフォントを明示的に指定します。</p><p>スライド マスターでテーマ フォントを設定した場合、表のフォント自体は [+本文のフォント] となりますが、表のフォントを [Meiryo UI] など明示的に指定します。</p><p>2. 英数字用フォントを変更します。</p><p>スライド マスターでテーマ フォントの英数字用フォントとして、[Meiryo UI] など日本語に設定したいフォントを指定します。</p><p>新たな情報が確認された場合には、この記事に追記する形で公開していく予定です。</p><p><strong>本情報の内容 (添付文書、リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Office サポート チームです。&lt;/p&gt;
&lt;p&gt;本記事では、PowerPoint Online で日本語フォントが異なるフォントで表示される問題について説明します。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;現象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PowerPoint の
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2020 年 4 月のセキュリティ更新による VBA からのネットワーク上の参照への影響</title>
    <link href="https://officesupportjp.github.io/blog/2020%20%E5%B9%B4%204%20%E6%9C%88%E3%81%AE%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E6%9B%B4%E6%96%B0%E3%81%AB%E3%82%88%E3%82%8B%20VBA%20%E3%81%8B%E3%82%89%E3%81%AE%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E4%B8%8A%E3%81%AE%E5%8F%82%E7%85%A7%E3%81%B8%E3%81%AE%E5%BD%B1%E9%9F%BF/"/>
    <id>https://officesupportjp.github.io/blog/2020%20%E5%B9%B4%204%20%E6%9C%88%E3%81%AE%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E6%9B%B4%E6%96%B0%E3%81%AB%E3%82%88%E3%82%8B%20VBA%20%E3%81%8B%E3%82%89%E3%81%AE%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E4%B8%8A%E3%81%AE%E5%8F%82%E7%85%A7%E3%81%B8%E3%81%AE%E5%BD%B1%E9%9F%BF/</id>
    <published>2020-10-13T06:10:09.732Z</published>
    <updated>2020-10-16T10:21:32.095Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>2020/10/16 Update</strong><br>インターネットから入手したファイルへの参照を許可するグループポリシーの情報を追記しました。</p><hr><p>こんにちは、Office 開発サポート チームの中村です。</p><p>2020 年 4 月 14 日 (米国時間) に公開されたセキュリティ更新の適用後に生じる問題として以下のサポート技術情報が公開されています。</p><p>2020 年4月の Office セキュリティ更新プログラムによって影響を受ける VBA ソリューションについてよく寄せられる質問<br><a href="https://support.microsoft.com/ja-jp/help/4557055" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/4557055</a></p><p>この内容について、更新の配信を管理する運用管理者からのお問い合わせをいくつか頂いています。本フォーラム記事では、上記のサポート技術情報の内容を VBA 開発者以外にも分かりやすいようご案内したいと思います。この記事をお読みいただくことで、影響を受けるファイルを適切に理解し、適用方針などの検討の一助となれば幸いです。  </p><h1 id="1-変更の概要"><a href="#1-変更の概要" class="headerlink" title="1.  変更の概要"></a>1.  変更の概要</h1><p>KB4557055 で説明する問題は、以下のセキュリティ脆弱性への対応として VBA からの外部ライブラリ参照時のセキュリティ チェックが強化されたために発生します。(更新プログラムを公開するサポート技術情報では [既知の問題] セクションに記載があるため、製品の不具合と誤解される場合がありますが、意図した変更に伴い、お客様の VBA プログラムで生じ得る問題として案内しています。)</p><p>CVE-2020-0760 | Microsoft Office のリモート コードが実行される脆弱性<br><a href="https://portal.msrc.microsoft.com/ja-jp/security-guidance/advisory/CVE-2020-0760" target="_blank" rel="noopener">https://portal.msrc.microsoft.com/ja-jp/security-guidance/advisory/CVE-2020-0760</a></p><p>この CVE-2020-0760について説明する資料の [ソフトウェア更新] の一覧で記載されている製品にはこの変更が行われてるため、本記事で説明する現象が発生する可能性があります。(現在サポート対象の全ての Windows 向け Office 製品が該当します。) なお、Office Online や、iOS/Android 向けの Office アプリでは VBA は利用できないため、今回の動作変更の対象ではありません。Mac OS 向け Office も今回の変更は対象外となります。  </p><p>VBA から Office のオブジェクト モデルで用意されたライブラリに含まれるプロパティやメソッドの他に、外部ライブラリを利用したい場合に、VBA からそのライブラリを参照して利用することがあります。</p><p>このとき、一般的には (ほとんどの場合は) ライブラリはregsvr32 の実行や、ライブラリ提供元で用意したインストーラによってクライアント PC に登録した上で利用します。この場合、Office VBA は登録された情報 (GUID) から、ライブラリの格納場所を特定して読み込みを行います。このシナリオは、今回の動作変更の影響を受けません。  </p><p>一方で、クライアント PC にライブラリが登録されていない場合には、Office は次に、作成時のライブラリ参照パスを基にライブラリの読み込みを試みます。この参照パスからライブラリを読み込む動作において、今回のセキュリティ強化によって以下の場合はブロックされるように変更されました。</p><ul><li>\\server\folder\xxx.dll のような UNC 共有パスの参照</li><li>インターネットからダウンロードされたライブラリ ファイルへの参照 (ファイルのプロパティで以下のような表示があるもの )<br><img src="image1.png" alt="ファイルのプロパティでインターネットから取得したファイルに表示されるメッセージ"></li></ul><p>この変更でブロックされるのは、以下の種類のファイルへの参照です。</p><ul><li>タイプライブラリ (* olb, * .tlb, * .dll)</li><li>実行可能ファイル (* .exe)</li><li>ActiveX コントロール (* .ocx)  </li></ul><h1 id="2-問題の詳細"><a href="#2-問題の詳細" class="headerlink" title="2. 問題の詳細"></a>2. 問題の詳細</h1><p>今回の変更でライブラリ参照がブロックされると、その Office ファイルを開いて Visual Basic Editor の [ツール] – [参照設定] を開いたとき、以下のようにライブラリ名の前に “参照不可:” と表示されます。</p><p><img src="image2.png" alt="参照設定で参照不可と表示された状態"></p><p>また、この状態で [デバッグ] – [VBAProject のコンパイル] を実行したり、このマクロを有効にして自動的にコンパイルが実行されると、コンパイル エラーが発生します。</p><p><img src="image3.png" alt="コンパイルエラー"></p><h1 id="3-問題に直面する可能性"><a href="#3-問題に直面する可能性" class="headerlink" title="3. 問題に直面する可能性"></a>3. 問題に直面する可能性</h1><p>1. でも触れた通り、外部ライブラリを参照する場合の一般的な構成としては、予めライブラリをクライアント PC に登録して利用します。登録されている場合は、登録情報 (GUID など) を基にライブラリを読み込みます。この場合はファイルの格納場所などに関わらず引き続き読み込むことができるため、ほとんどの VBA はこの問題に直面しません。</p><p>GUID による解決ができない場合のみが、今回の変更の影響を受けます。さらに、GUID で解決できなくとも、ライブラリをローカルに格納しており、インターネットから入手したとマークされていなければ影響はありません。プログラムから利用するライブラリをサーバー上から参照することも、あまり一般的には行わないかと思いますので、この動作変更の影響を受けるファイルは非常に限定されます。  </p><h1 id="4-対応方法"><a href="#4-対応方法" class="headerlink" title="4. 対応方法"></a>4. 対応方法</h1><p>利用状況に応じて、以下のいずれかの方法が検討できます。  </p><h2 id="4-1-VBA-の参照設定を変更する"><a href="#4-1-VBA-の参照設定を変更する" class="headerlink" title="4-1. VBA の参照設定を変更する"></a>4-1. VBA の参照設定を変更する</h2><p>変更された後の動作でもライブラリが読み込まれるよう、以下のいずれかの変更を行います。</p><ul><li>regsvr32 やライブラリ提供元で用意しているインストーラを用いて、ライブラリをクライアント PC に登録します。</li><li>参照対象ライブラリをクライアント PC のローカル フォルダに格納し、参照設定からローカル パスを参照するよう変更します。</li><li>参照対象ライブラリの格納フォルダを Internet Explorer の信頼済みサイトとして登録します。(ローカル パスと同等の扱いとなります。)</li><li>インターネットから入手したファイルとしてマークされている場合は、プロパティで [許可] を有効にして [OK] をクリックしてこのマークを外します。(かつ、ローカルに格納します。)</li></ul><p><img src="file:///C:/Users/KANAKA~1.FAR/AppData/Local/Temp/msohtmlclip1/01/clip_image008.jpg" alt=""></p><h2 id="4-2-グループポリシーで動作を変更する"><a href="#4-2-グループポリシーで動作を変更する" class="headerlink" title="4-2. グループポリシーで動作を変更する"></a>4-2. グループポリシーで動作を変更する</h2><p>4-1. のような個別の対応が難しい場合には、新たに追加されたグループポリシーを設定することで、これまでのように読み込みを許可することができます。<br>以下で紹介する 2 つのポリシーを設定するためには、バージョン 5002.1000 以降の新しい管理用テンプレートを利用する必要があります。最新の管理用テンプレートは以下からダウンロードできます。</p><p>Administrative Template files (ADMX/ADML) and Office Customization Tool for Office 365 ProPlus, Office 2019, and Office 2016<br><a href="https://www.microsoft.com/en-us/download/details.aspx?id=49030" target="_blank" rel="noopener">https://www.microsoft.com/en-us/download/details.aspx?id=49030</a><br>※ 今回の項目は、Office 2016 / 2019 / 365 向けのテンプレートにのみ追加されています。ただし、今回のポリシーで設定されるレジストリはバージョンに依存しないキーのパスとなるため、Office 2010 や 2013 をご利用の環境でもこの Office 2016 / 2019 / 365 向け管理用テンプレートを導入して設定することができます。または、上記のレジストリを直接グループポリシーで配信してください。</p><h3 id="イントラネットのファイルへの参照の場合"><a href="#イントラネットのファイルへの参照の場合" class="headerlink" title="イントラネットのファイルへの参照の場合"></a>イントラネットのファイルへの参照の場合</h3><p>イントラネット (※) に格納されたライブラリについては、以下のグループ ポリシーを設定します。ただし、イントラネットの UNC パスからの読み込みがすべて許可され、セキュリティ強度は低下しますので、問題のあるファイルをイントラネットに配置しないよう注意が必要です。</p><p>&lt;グループポリシー項目&gt;<br>[ユーザーの構成] – [Microsoft Office 2016] – [セキュリティ設定] – [VBA が信頼されていないイントラネットの場所からのパスで typelib 参照を読み込めないようにする]  </p><p>&lt;設定値&gt;<br>有効</p><p><img src="image4.png" alt="">  </p><p><strong>補足</strong><br>このグループポリシーに対応する以下のレジストリを直接設定することもできます。</p><p>キー : HKEY_CURRENT_USER\Software\Policies\Microsoft\VBA\Security<br>名前 : AllowVbaIntranetReferences<br>種類 : REG_DWORD<br>値 : 1</p><p><strong>イントラネットとみなされる条件</strong><br>既定では、UNC パスの指定方法によって異なります。</p><p>\\Server\folder\xxx.dll : イントラネット<br>\\Server.contoso.com\folder\xxx.dll (FQDN 指定) : <u><strong>インターネット</strong></u><br>\\111.111.111.111\folder\xxx.dll (IPアドレス指定) : <u><strong>インターネット</strong></u></p><p>インターネットと認識されるパスは、上記のポリシーを設定してもライブラリは読み込まれません。これらのパスをイントラネットと認識させるためには、Internet Explorer の [設定] (歯車のマーク) – [インターネット オプション] – [セキュリティ] タブで [ローカル イントラネット] を選択して [サイト] をクリックし、[詳細設定] から対象の FQDN や IP アドレスを追加します。(ワイルドカード指定可能です。)</p><p>※ UNC パスを登録するには、下部の [このゾーンのサイトにはすべてサーバーの確認 (https:) を必要とする] を無効にする必要があります。</p><p><img src="file:///C:/Users/KANAKA~1.FAR/AppData/Local/Temp/msohtmlclip1/01/clip_image010.jpg" alt=""><img src="image5.png" alt="ローカル イントラネット ゾーン"></p><h3 id="インターネットから入手したファイルとしてマークされているファイルへの参照の場合"><a href="#インターネットから入手したファイルとしてマークされているファイルへの参照の場合" class="headerlink" title="インターネットから入手したファイルとしてマークされているファイルへの参照の場合"></a>インターネットから入手したファイルとしてマークされているファイルへの参照の場合</h3><p>システム構成やインストールの手順上、ライブラリ ファイルがインターネットから入手したファイルとしてマークされるシナリオでは、以下のグループ ポリシーを設定します。ただし、あらゆるインターネットから入手したファイルとしてマークされているライブラリ ファイルへの参照が許可されますので、セキュリティ リスクを十分考慮の上設定してください。</p><p>&lt;グループポリシー項目&gt;<br>[ユーザーの構成] – [Microsoft Office 2016] – [セキュリティ設定] – [ローカル コンピューターの安全でない場所を参照している可能性のある VBA ライブラリの参照に対する追加のセキュリティ チェックを無効にする]  </p><p>&lt;設定値&gt;<br>有効</p><p><img src="image6.png" alt=""></p><p><strong>補足</strong><br>このグループポリシーに対応する以下のレジストリを直接設定することもできます。</p><p>キー : HKEY_CURRENT_USER\Software\Policies\Microsoft\VBA\Security<br>名前 : DisableStrictVbaRefsSecurity<br>種類 : REG_DWORD<br>値 : 1</p><p>今回の投稿は以上です。</p><p><strong>本情報の内容 (添付文書、リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;2020/10/16 Update&lt;/strong&gt;&lt;br&gt;インターネットから入手したファイルへの参照を許可するグループポリシーの情報を追記しました。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;こんにちは、Office 開発サポート チームの中村です。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
    
      <category term="Office 全般" scheme="https://officesupportjp.github.io/blog/tags/Office-%E5%85%A8%E8%88%AC/"/>
    
      <category term="Office 開発" scheme="https://officesupportjp.github.io/blog/tags/Office-%E9%96%8B%E7%99%BA/"/>
    
      <category term="更新プログラム" scheme="https://officesupportjp.github.io/blog/tags/%E6%9B%B4%E6%96%B0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0/"/>
    
  </entry>
  
  <entry>
    <title>Office 展開ツール (16.0.12827.20268) で RemoveMSI 属性を使用すると 30041-1039-30050-1039 等のエラーメッセージが表示される</title>
    <link href="https://officesupportjp.github.io/blog/Office%20%E5%B1%95%E9%96%8B%E3%83%84%E3%83%BC%E3%83%AB%20(16.0.12827.20268)%20%E3%81%A7%20RemoveMSI%20%E5%B1%9E%E6%80%A7%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%81%A8%2030041-1039-30050-1039%20%E7%AD%89%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%8C%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B/"/>
    <id>https://officesupportjp.github.io/blog/Office%20%E5%B1%95%E9%96%8B%E3%83%84%E3%83%BC%E3%83%AB%20(16.0.12827.20268)%20%E3%81%A7%20RemoveMSI%20%E5%B1%9E%E6%80%A7%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%81%A8%2030041-1039-30050-1039%20%E7%AD%89%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%8C%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%82%8B/</id>
    <published>2020-09-14T15:00:00.000Z</published>
    <updated>2020-09-30T10:21:01.175Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Office サポートの西川 (直) です。</p><p>表題の件について、既知の事象が報告されておりますのでご案内いたします。</p><p><strong>【事象】</strong>  </p><p>Office 展開ツール (16.0.12827.20268) で 30041-1039 や 30050-1039 のエラーメッセージが表示される</p><p><strong>【説明】</strong>  </p><p>本事象は 2020/6/9 にリリースされた Office 展開ツール (Version 16.0.12827.20268) に起因した事象である可能性がございます。</p><p>当該バージョンの Office 展開ツールでは、RemoveMSI 属性 で Office 2007 製品もアンインストールが可能となりましたが、<br>バージョン番号が “12” から始まる一部の MSI インストール形式の製品がインストールされている環境で、アンインストールが失敗しエラーとなる事象が発生しております。</p><p>本不具合については、リリース時期はまだ未定ですが、次期バージョンの ODT で修正される見込みとなっております</p><p><strong>【回避策】</strong>  </p><p>以下の何れかの回避策をご実施いただけますようお願いいたします。</p><p>・Office 2007 製品をコントロールパネルからアンインストールするか、以下の資料の OffScrub07.vbs により Office 2007 製品をアンインストールしてください。  </p><p><a href="https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/tree/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls" target="_blank" rel="noopener">https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/tree/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls</a>  </p><p>・RemoveMSI 属性を削除してください</p><p><strong>【参考】</strong>  </p><p>Release history for Office Deployment Tool</p><p><a href="https://docs.microsoft.com/en-us/officeupdates/odt-release-history" target="_blank" rel="noopener"></a><a href="https://docs.microsoft.com/en-us/officeupdates/odt-release-history" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/officeupdates/odt-release-history</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Office サポートの西川 (直) です。&lt;/p&gt;
&lt;p&gt;表題の件について、既知の事象が報告されておりますのでご案内いたします。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【事象】&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;Office 展開ツール (16.0.12827.20
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Windows 10 バージョン 2004 (20H1) 上で 半角カナのフォームを含んだ Access ファイルでエラーが発生する</title>
    <link href="https://officesupportjp.github.io/blog/Windows%2010%20%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%202004%20(20H1)%20%E4%B8%8A%E3%81%A7%20%E5%8D%8A%E8%A7%92%E3%82%AB%E3%83%8A%E3%81%AE%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%82%92%E5%90%AB%E3%82%93%E3%81%A0%20Access%20%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A7%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%99%E3%82%8B/"/>
    <id>https://officesupportjp.github.io/blog/Windows%2010%20%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%202004%20(20H1)%20%E4%B8%8A%E3%81%A7%20%E5%8D%8A%E8%A7%92%E3%82%AB%E3%83%8A%E3%81%AE%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%82%92%E5%90%AB%E3%82%93%E3%81%A0%20Access%20%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A7%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%99%E3%82%8B/</id>
    <published>2020-08-23T15:00:00.000Z</published>
    <updated>2020-09-30T10:21:01.177Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Office サポート チームの佐村です。</p><p>今回の記事では、Windows 10 バージョン 2004 上で半角カナ + カナに濁音 / 半濁音を含んでいる Access ファイルを開くとエラーが発生する状況について説明します。</p><p>(Access のバージョンに依存性はなく Windows 10 バージョン 2004 上での Access アプリケーションで発生します。)</p><p><strong>1.</strong> <strong>現象</strong></p><p>Windows 10 バージョン 2004 上で Access ファイルを開いた時、VBA を実行しようとしたとき、VBA プロジェクトを開こうとしたとき等に以下のようなエラーが発生する可能性があります。</p><p>・フォーム名 ‘半角カナを含んだフォーム名’ が正しくないか、存在しないフォームを参照しています。</p><p><img src="image1.png" alt=""></p><p>・データベースに含まれている VBA プロジェクトを読み取れないため、データベースを開くことができません。</p><p><img src="image2.png" alt=""></p><p>「データベースに含まれている VBA プロジェクトを～」のエラーダイアログで「OK」ボタンをクリックするとファイルに保存されている VBA プロジェクトが全て削除され、Access ファイルは操作の都度保存されるため VBA プロジェクトが削除された状態でファイルが自動保存されてしまい、コードが消失して復元ができなくなる可能性があります。</p><p>この動作が生じる条件は以下になります。</p><p><strong>問題発生条件</strong></p><p>・Windows 10 OS バージョン 2004 である。</p><p>・Access ファイル内のフォーム名に半角カタカナを利用して濁音、半濁音のいずれかが含まれている。</p><p>この条件を満たす場合、フォームに紐づく VBA プロジェクトが存在している場合や、半角カナのサブフォームを指定する際に全角で指定していると上記であげたエラーが発生します。</p><p><strong>2.</strong> <strong>原因の説明</strong></p><p>Access アプリケーションでは、フォーム名に関して OS で用意している機能を利用し、半角と全角とを区別せずに比較しています。</p><p>そのため、以前の OS では “ガ” と “ガ” のような全角 / 半角は同じ文字列として判定されていましたが、Windows 10 バージョン 2004 では OS の自然言語処理を担う NLS (National Language Support) バージョンが更新され異なる文字列として判定されてしまいます。</p><p>これによって内部管理上同じとみなされることが期待されるフォームが異なるものとして認識されるためにエラーが発生します。</p><p><strong>3.</strong> <strong>暫定対応方法</strong></p><p><strong>3-1. Access</strong> <strong>アプリケーション観点 - Access の EXE (MSACCESS.EXE) について、”Windows 8” の互換設定を行う</strong></p><p>エクスプローラーで MSACCESS.EXE までを展開し、MSACCESS.EXE のプロパティから互換モードで動作するように変更します。</p><p><img src="image3.png" alt=""></p><p>※OfficeNN バージョン番号</p><p>Office16 : Microsoft 365 Apps (Office 365 ProPlus) / Office 2019 / Office 2016</p><p>Office15 : Office 2013</p><p>Office14 : Office 2010</p><p>-ご参考</p><p>タイトル : クイック実行形式 (C2R) と Windows インストーラー形式 (MSI) を見分ける方法</p><p>URL : <a href="https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fsocial.msdn.microsoft.com%2FForums%2Fja-JP%2F57e5d81e-ef69-4c1f-9ef0-932d03d0e7ce%2F1246312452124831246323455348922441824335-c2r-12392-windows&data=02%7C01%7Cmasamura%40microsoft.com%7C3ad5c5de6c1348d728f508d847f6a5de%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637338471963470942&sdata=td%2FgO%2BMeA2HHyTyR%2FW%2FbrJHzTmnVb2Anp2JvIW9mQ6Y%3D&reserved=0" target="_blank" rel="noopener">https://social.msdn.microsoft.com/Forums/ja-JP/57e5d81e-ef69-4c1f-9ef0-932d03d0e7ce/1246312452124831246323455348922441824335-c2r-12392-windows</a></p><p>&lt;設定変更方法 (C2R版 Office の場合)&gt;</p><p>-———————–</p><p>・エクスプローラー上から、MSACCESS.EXE を右クリックし、「プロパティ」を選択します。</p><p>・MSACCESS.EXE のプロパティ画面で「互換性」タブを選択します。</p><p>・「互換モードでこのプログラムを実行する」のチェックを ON にしてターゲットとして Windows 8 が選択されていることを確認します。</p><p>・「OK」ボタンをクリックします。</p><p>※元の設定に戻す場合は「互換モードでこのプログラムを実行する」のチェックを OFF にします</p><p>-———————–</p><p>&lt;設定変更方法 (MSI版 Office の場合)&gt;</p><p>-———————–</p><p>・エクスプローラー上から、MSACCESS.EXE を右クリックし、「互換性のトラブルシューティング」を選択します。</p><p>・「推奨設定を使用する」を選択する。</p><p>・Windows 互換モード : Windows 8 となっていることを確認し「プログラムのテスト」ボタンをクリックします。</p><p>・Access アプリケーションが起動したら×ボタンで閉じて「次へ」ボタンをクリックします。</p><p>・「はい、このプログラムのこの設定を保存します」を選択します。</p><p>・「閉じる」ボタンでトラブルシューティングツールを閉じます。</p><p>※元の設定に戻す場合は以下のレジストリ配下の MSACCESS への設定を削除します。</p><p>HKCU\Software\Microsoft\Windows NT\CurrentVersion\AppCompactFlags\Layers</p><p>-———————–</p><p>なお、Access をはじめ Office アプリケーションは互換性を変更した検証は実施しておらず、</p><p>互換性を変更して動作させた場合に、予期しない動作が発生することがございます。</p><p><strong>3-2. Access</strong> <strong>ファイル観点 - Access のフォームで半角カタカナを全角カタカナに変更する</strong></p><p>Windows 10 の OS 1909 等、以前の問題が発生しない OS バージョンでフォーム等の半角カタカナを全角カタカナに統一します。</p><p>VBA コードに半角カナでフォームを指定している場合等、半角カタカナのフォームを参照している処理は全角カナに修正する必要があります。</p><p><strong>補足</strong></p><p>現在、Office および Windows 10 OS 観点でこの問題について対応を協議しています。</p><p>今後の方針や追加の回避方法等が分かり次第本資料を更新します。</p><p><strong>本情報の内容 (添付文書、リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Office サポート チームの佐村です。&lt;/p&gt;
&lt;p&gt;今回の記事では、Windows 10 バージョン 2004 上で半角カナ + カナに濁音 / 半濁音を含んでいる Access ファイルを開くとエラーが発生する状況について説明します。&lt;/p&gt;
&lt;p&gt;(A
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Office のサインインのトラブルシュートについて</title>
    <link href="https://officesupportjp.github.io/blog/Office%20%E3%81%AE%E3%82%B5%E3%82%A4%E3%83%B3%E3%82%A4%E3%83%B3%E3%81%AE%E3%83%88%E3%83%A9%E3%83%96%E3%83%AB%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/"/>
    <id>https://officesupportjp.github.io/blog/Office%20%E3%81%AE%E3%82%B5%E3%82%A4%E3%83%B3%E3%82%A4%E3%83%B3%E3%81%AE%E3%83%88%E3%83%A9%E3%83%96%E3%83%AB%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</id>
    <published>2020-08-03T15:00:00.000Z</published>
    <updated>2020-10-16T10:10:01.381Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、Office サポートの西川 (直) です。  </p><p>Office のサインインを行うときに、特定のユーザーだけサインインが成功しないとお問い合わせいただくことがございます。</p><p>この場合、以下の公開情報のとおり、サインインおよびライセンス情報のリセットをお試しいただくことで、解消する可能性がございます。</p><p>Microsoft 365 Apps for enterprise のライセンス認証の状態をリセットする</p><p><a href="https://docs.microsoft.com/ja-jp/office/troubleshoot/activation/reset-office-365-proplus-activation-state" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/office/troubleshoot/activation/reset-office-365-proplus-activation-state</a></p><p>ただし、上記の公開情報には手順が多く含まれているため、以下を指針としてご対応ください。</p><br><p>■ ログオンユーザーに管理者権限がある場合</p><p>===========================</p><p>1. Office からサインアウトし、Office を全て終了します。</p><p>2. 公開情報内の “OLicenseCleanup.vbs” をご実施ください</p><p>&lt;以降、<a href="https://social.msdn.microsoft.com/Forums/ja-JP/57e5d81e-ef69-4c1f-9ef0-932d03d0e7ce/1246312452124831246323455348922441824335-c2r-12392-windows?forum=officesupportteamja" target="_blank" rel="noopener">クイック実行形式 (C2R) の Office 2016/2019/Office 365 ProPlus (Microsoft 365 Apps) のみ</a>&gt;</p><p>3. 公開情報内の “社内参加から資格情報をクリアする” のとおり、[職場または学校にアクセスする] からアカウントを切断してください。</p><p>   アカウントが存在しない場合、”Signoutofwamaccounts.ps1” をご実施ください。</p><p>  もし、”Signoutofwamaccounts.ps1” が文字化けしている場合、後述の内容をお試しください。</p><p>4. OS からサインアウトしてください</p><p>5. OS にサインインし、Office にサインインできるかをお試しください。</p><br><p>■ ログオンユーザーに管理者権限がない場合</p><p>===========================</p><p>1. Office からサインアウトし、Office を全て終了します。  </p><p>2. 管理者用のアカウントでコマンドプロンプトを起動し、公開情報内の “手順 1: サブスクリプション ベースのインストール用の Office 365 ライセンスを削除する” をご実施ください</p><p>3. ログオンユーザーで、以下の手順をご実施ください。</p><p>手順 2: HKCU レジストリのキャッシュされた ID を削除します。<br>手順 3: 資格情報マネージャーで保存されている資格情報を削除します。<br>手順 4: 保存された場所をクリアする</p><p>&lt;以降、<a href="https://social.msdn.microsoft.com/Forums/ja-JP/57e5d81e-ef69-4c1f-9ef0-932d03d0e7ce/1246312452124831246323455348922441824335-c2r-12392-windows?forum=officesupportteamja" target="_blank" rel="noopener">クイック実行形式 (C2R) の Office 2016/2019/Office 365 ProPlus (Microsoft 365 Apps) のみ</a>&gt;</p><p>4. “社内参加から資格情報をクリアする” のとおり、[職場または学校にアクセスする] からアカウントを切断してください。  </p><p>5. OS からサインアウトしてください  </p><p>6. OS にサインインし、Office にサインインできるかをお試しください。<br><br></p><p>- signoutofwamaccounts.ps1</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="operator">-not</span> \[<span class="type">Windows.Foundation.Metadata.ApiInformation</span>,<span class="type">Windows</span>,<span class="type">ContentType</span>=<span class="type">WindowsRuntime</span>\]::IsMethodPresent(<span class="string">"Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager"</span>, <span class="string">"FindAllAccountsAsync"</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"This script is not supported on this Windows version. Please, use CleanupWPJ.cmd."</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Add-Type</span> <span class="literal">-AssemblyName</span> System.Runtime.WindowsRuntime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">Function</span> <span class="title">AwaitAction</span><span class="params">(<span class="variable">$WinRtAction</span>)</span></span> &#123;</span><br><span class="line">  <span class="variable">$asTask</span> = (\[<span class="type">System.WindowsRuntimeSystemExtensions</span>\].GetMethods() | ? &#123; <span class="variable">$</span>\_.Name <span class="operator">-eq</span> <span class="string">'AsTask'</span> <span class="operator">-and</span> <span class="variable">$</span>\_.GetParameters().Count <span class="operator">-eq</span> <span class="number">1</span> <span class="operator">-and</span> !<span class="variable">$</span>\_.IsGenericMethod &#125;)\[<span class="number">0</span>\]</span><br><span class="line">  <span class="variable">$netTask</span> = <span class="variable">$asTask</span>.Invoke(<span class="variable">$null</span>, <span class="selector-tag">@</span>(<span class="variable">$WinRtAction</span>))</span><br><span class="line">  <span class="variable">$netTask</span>.Wait(<span class="literal">-1</span>) | <span class="built_in">Out-Null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">Function</span> <span class="title">Await</span><span class="params">(<span class="variable">$WinRtTask</span>, <span class="variable">$ResultType</span>)</span></span> &#123;</span><br><span class="line">  <span class="variable">$asTaskGeneric</span> = (\[<span class="type">System.WindowsRuntimeSystemExtensions</span>\].GetMethods() | ? &#123; <span class="variable">$</span>\_.Name <span class="operator">-eq</span> <span class="string">'AsTask'</span> <span class="operator">-and</span> <span class="variable">$</span>\_.GetParameters().Count <span class="operator">-eq</span> <span class="number">1</span> <span class="operator">-and</span> <span class="variable">$</span>\_.GetParameters()\[<span class="number">0</span>\].ParameterType.Name <span class="operator">-eq</span> <span class="string">'IAsyncOperation\`1'</span> &#125;)\[<span class="number">0</span>\]</span><br><span class="line">  <span class="variable">$asTask</span> = <span class="variable">$asTaskGeneric</span>.MakeGenericMethod(<span class="variable">$ResultType</span>)</span><br><span class="line">  <span class="variable">$netTask</span> = <span class="variable">$asTask</span>.Invoke(<span class="variable">$null</span>, <span class="selector-tag">@</span>(<span class="variable">$WinRtTask</span>))</span><br><span class="line">  <span class="variable">$netTask</span>.Wait(<span class="literal">-1</span>) | <span class="built_in">Out-Null</span></span><br><span class="line">  <span class="variable">$netTask</span>.Result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$provider</span> = Await (\[<span class="type">Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager</span>,<span class="type">Windows</span>,<span class="type">ContentType</span>=<span class="type">WindowsRuntime</span>\]::FindAccountProviderAsync(<span class="string">"https://login.microsoft.com"</span>, <span class="string">"organizations"</span>)) (\[<span class="type">Windows.Security.Credentials.WebAccountProvider</span>,<span class="type">Windows</span>,<span class="type">ContentType</span>=<span class="type">WindowsRuntime</span>\])</span><br><span class="line"></span><br><span class="line"><span class="variable">$accounts</span> = Await (\[<span class="type">Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager</span>,<span class="type">Windows</span>,<span class="type">ContentType</span>=<span class="type">WindowsRuntime</span>\]::FindAllAccountsAsync(<span class="variable">$provider</span>, <span class="string">"d3590ed6-52b3-4102-aeff-aad2292ab01c"</span>)) (\[<span class="type">Windows.Security.Authentication.Web.Core.FindAllAccountsResult</span>,<span class="type">Windows</span>,<span class="type">ContentType</span>=<span class="type">WindowsRuntime</span>\])</span><br><span class="line"></span><br><span class="line"><span class="variable">$accounts</span>.Accounts | % &#123; AwaitAction (<span class="variable">$</span>\_.SignOutAsync(<span class="string">"d3590ed6-52b3-4102-aeff-aad2292ab01c"</span>)) &#125;</span><br></pre></td></tr></table></figure><br><p>- 関連記事<br>Office のサインインでネットワーク接続がない旨のメッセージが表示される事象について<br><a href="https://social.msdn.microsoft.com/Forums/ja-JP/40ba1467-0b54-48d5-9db0-4d3aedca2b0a/office?forum=officesupportteamja" target="_blank" rel="noopener">https://social.msdn.microsoft.com/Forums/ja-JP/40ba1467-0b54-48d5-9db0-4d3aedca2b0a/office?forum=officesupportteamja</a></p><br><p><strong>本情報の内容 (添付文書、リンク先などを含む) は、作成日時点でのものであり、予告なく変更される場合があります。</strong><br><a href="https://social.msdn.microsoft.com/Forums/ja-JP/40ba1467-0b54-48d5-9db0-4d3aedca2b0a/office?forum=officesupportteamja" target="_blank" rel="noopener"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、Office サポートの西川 (直) です。  &lt;/p&gt;
&lt;p&gt;Office のサインインを行うときに、特定のユーザーだけサインインが成功しないとお問い合わせいただくことがございます。&lt;/p&gt;
&lt;p&gt;この場合、以下の公開情報のとおり、サインインおよびライセンス情
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
